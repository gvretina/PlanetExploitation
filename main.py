#!/usr/bin/python3

import glob
import mss
from PIL import Image
import numpy as np
import cv2
import hough
from pynput.mouse import Button, Controller
from pynput import keyboard
import time
import config
from subprocess import call, check_output
import sys

try:
    if(str(sys.argv[1])!="--setup" and str(sys.argv[1])!="--run"):
        print("Need to be run either in --setup or --run mode")
        quit()
except(IndexError):
    print("You need to start with --setup mode first, read instructions, then --run")
    quit()
    
if(str(sys.argv[1])=="--setup"):
    pwd = check_output(["pwd"])
    pwd = pwd.decode("utf=8")
    pwd = pwd.rstrip()
    call("source " + pwd + "/bangscript.sh -b" + config.bit_rate + " -m" + str(config.max_size), shell=True)

print("---Bangbot script v0.1---")
print("bit-rate is set to " + config.bit_rate)
print("max_size is set to " + str(config.max_size))
print("Bot supports running in --setup and --run modes currently")
print("Remember to enable file transfer mode before running setup")
print("Remmber to enable usb debugging and usb remote control from developer settings!")
print("ALWAYS SETUP THE BOT BEFORE RUNNING IT TO AVOID PHONE MALFUNCTION")

#initiation of mouse
mouse = Controller()

#Screen capture coords and sct init
mon = {'top' : config.top, 'left' :config.left, 'width' : config.width, 'height' : config.height}

#Stop programm on key press
break_program = False
def on_press(key):
    global break_program
    if key == keyboard.Key.esc:
        print ('escape pressed!')
        break_program = True
        return False

#mainloop-Setup mode
def botsetup():
    print("Welcome to setup mode, please move the phone mirror screen until it fits the setup window very well, then close the program by clicking on the setup window and pressing q!")
    print("Name of phone window shoudn't be seen in the setup frame. After you are finished please close the setup frame by clicking on it and then pressing q, leaving the phone window open, go to big bang and start in run mode just before the round starts!")
    print("Useful advice: Your phone will click any circles appearing on the screen and your computer will be unusable while the script is running unless you press ESCAPE to stop the script!")
    sct = mss.mss()
    frame_prev = np.array(sct.grab(mon))
    while True:
        frame_now = np.array(sct.grab(mon))
        frame, x = hough.houghanalysis(frame_prev,frame_now)
        frame_prev = frame_now
        cv2.imshow ('frame', frame)
        if cv2.waitKey ( 1 ) & 0xff == ord( 'q' ) :
            cv2.destroyAllWindows()
            quit()


#mainloop-Run mode
def botrun():
    with keyboard.Listener(on_press=on_press) as listener:
        sct = mss.mss()
        frame_prev = np.array(sct.grab(mon))
        while(break_program == False):
            frame_now = np.array(sct.grab(mon))
            frame, x = hough.houghanalysis(frame_prev,frame_now)
            frame_prev = frame_now
            for abpos in x:
                coords = list(abpos)
                if(coords[1]<int(config.click_height_negate)):
                    #((coords[0]>234)and(coords[1]<83)):
                    continue
                coords = (coords[0]+config.left, coords[1]+config.top)
                mouse.position = coords
                mouse.press(Button.left)
                mouse.release(Button.left)
                time.sleep(config.timesleep)
                break

    listener.join()

if(str(sys.argv[1])=="--setup"):
    botsetup()
elif(str(sys.argv[1])=="--run"):
    print("Run mode activated! Press escape to stop program!")
    print("Reminder: Messenger notifications will probably ruin everything!")
    botrun()
